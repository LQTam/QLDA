{"ast":null,"code":"var _jsxFileName = \"/home/dev/ictu/qlda/QLDA/src/components/Login/index.js\";\nimport React from 'react';\nimport { Link, Redirect, withRouter } from 'react-router-dom';\nimport { Toaster, Intent } from '@blueprintjs/core';\nimport { withFirebase } from '../Firebase';\nimport { compose } from 'recompose';\nimport { AuthUserContext } from '../Session';\nimport { THONGKE } from '../../constants/routes';\nimport { ADMIN } from '../../constants/roles';\n\nconst Login = () => React.createElement(AuthUserContext.Consumer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, authUser => authUser ? React.createElement(Redirect, {\n  to: THONGKE,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}) : React.createElement(SignInForm, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}));\n\nclass LoginFormBase extends React.Component {\n  constructor() {\n    super();\n\n    this.handleLogin = async event => {\n      event.preventDefault();\n      const _event$target$element = event.target.elements,\n            email = _event$target$element.email,\n            password = _event$target$element.password;\n\n      try {\n        const user = await this.props.firebase.doSignInWithEmailAndPassword(email.value, password.value);\n        console.log(user); // this.setState({ redirect: true });\n      } catch (err) {\n        this.toaster.show({\n          intent: Intent.DANGER,\n          message: err.message\n        });\n      }\n    };\n\n    this.googleLogin = async () => {\n      try {\n        const roles = [];\n\n        if (this.state.isAdmin) {\n          roles.push(ADMIN);\n        }\n\n        this.props.firebase.doSignInWithGoogle().then(authUser => {\n          return this.props.firebase.user(authUser.user.uid).set({\n            email: authUser.user.email,\n            uid: authUser.user.uid,\n            roles\n          }).then(() => {\n            this.props.history.push(THONGKE);\n          }).catch(err => {\n            this.toaster.show({\n              intent: Intent.DANGER,\n              message: err.message\n            });\n            this.setState({\n              error: err.message\n            });\n          });\n        }).catch(err => {\n          this.toaster.show({\n            intent: Intent.DANGER,\n            message: err.message\n          });\n          this.setState({\n            error: err.message\n          });\n        });\n        ;\n        this.setState({\n          redirect: true\n        });\n      } catch (err) {\n        this.toaster.show({\n          intent: Intent.DANGER,\n          message: 'Unable to sign in with google.'\n        });\n      }\n    };\n\n    this.state = {\n      redirect: false,\n      error: null,\n      isAdmin: false\n    };\n  }\n\n  render() {\n    if (this.state.redirect === true) {\n      return React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), \"  \", React.createElement(\"p\", {\n      className: \"text-center\",\n      style: {\n        position: 'absolute',\n        left: '50%',\n        top: '10%',\n        transform: 'translateX(-50%)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Toaster, {\n      ref: element => this.toaster = element,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"card bg-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"article\", {\n      className: \"card-body mx-auto\",\n      style: {\n        maxWidth: '400px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"card-title mt-3 text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Toaster, {\n      ref: element => this.toaster = element,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      style: {\n        margin: \"10px 0 10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"#\",\n      style: {\n        backgroundColor: '#DD4B39'\n      },\n      onClick: () => this.googleLogin(),\n      className: \"btn btn-block text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \" \", React.createElement(\"i\", {\n      className: \"fa fa-google\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), \" \\xA0 Login via Google\")), React.createElement(\"p\", {\n      className: \"divider-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"bg-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"OR\")), React.createElement(\"form\", {\n      action: \"#\",\n      onSubmit: event => this.handleLogin(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group-prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"input-group-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \" \", React.createElement(\"i\", {\n      className: \"fa fa-envelope\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), \" \")), React.createElement(\"input\", {\n      name: \"email\",\n      defaultValue: \"laquyettam1@gmail.com\",\n      className: \"form-control\",\n      placeholder: \"Email address\",\n      type: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })), \" \", React.createElement(\"div\", {\n      className: \"form-group input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group-prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"input-group-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \" \", React.createElement(\"i\", {\n      className: \"fa fa-lock\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), \" \")), React.createElement(\"input\", {\n      name: \"password\",\n      className: \"form-control\",\n      placeholder: \"Create password\",\n      type: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    })), \" \", React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary btn-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \" Login\")), \" \", React.createElement(\"p\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Don't have an account?\", React.createElement(Link, {\n      to: \"/sign-up\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Sign Up\"), \" \")))));\n  }\n\n}\n\nconst SignInForm = compose(withRouter, withFirebase)(LoginFormBase);\nexport default Login;","map":{"version":3,"sources":["/home/dev/ictu/qlda/QLDA/src/components/Login/index.js"],"names":["React","Link","Redirect","withRouter","Toaster","Intent","withFirebase","compose","AuthUserContext","THONGKE","ADMIN","Login","authUser","LoginFormBase","Component","constructor","handleLogin","event","preventDefault","target","elements","email","password","user","props","firebase","doSignInWithEmailAndPassword","value","console","log","err","toaster","show","intent","DANGER","message","googleLogin","roles","state","isAdmin","push","doSignInWithGoogle","then","uid","set","history","catch","setState","error","redirect","render","position","left","top","transform","element","maxWidth","margin","backgroundColor","SignInForm"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Link, Redirect,withRouter } from 'react-router-dom'\nimport { Toaster, Intent } from '@blueprintjs/core'\nimport { withFirebase } from '../Firebase';\nimport { compose } from 'recompose';\nimport { AuthUserContext } from '../Session';\nimport { THONGKE } from '../../constants/routes';\nimport { ADMIN } from '../../constants/roles';\n\nconst Login = () => (\n    <AuthUserContext.Consumer>\n        {authUser =>\n            authUser ? <Redirect to={THONGKE} /> : (\n                <SignInForm />\n            )}\n    </AuthUserContext.Consumer>\n)\n\nclass LoginFormBase extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            redirect: false,\n            error : null,\n            isAdmin : false,\n        }\n    }\n\n    handleLogin = async event => {\n        event.preventDefault();\n        const { email, password } = event.target.elements;\n\n        try {\n            const user = await this.props.firebase.doSignInWithEmailAndPassword(email.value, password.value);\n            console.log(user);\n            // this.setState({ redirect: true });\n        }\n        catch (err) {\n            this.toaster.show({ intent: Intent.DANGER, message: err.message })\n        }\n    }\n\n    googleLogin = async () => {\n        try {\n            const roles = [];\n\n            if(this.state.isAdmin){\n                roles.push(ADMIN);\n            }\n            this.props.firebase.doSignInWithGoogle()\n            .then(authUser=>{\n                return this.props.firebase\n                .user(authUser.user.uid)\n                .set({\n                    email : authUser.user.email,\n                    uid : authUser.user.uid,\n                    roles,\n                })\n                .then(()=>{\n                    this.props.history.push(THONGKE);\n                })\n                .catch(err=>{\n                    this.toaster.show({ intent: Intent.DANGER, message: err.message })\n                    this.setState({error : err.message})\n                });\n            })\n            .catch(err=> {\n                this.toaster.show({ intent: Intent.DANGER, message: err.message })\n                this.setState({error : err.message})\n            });;\n            this.setState({ redirect: true })\n        }\n        catch (err) {\n            this.toaster.show({ intent: Intent.DANGER, message: 'Unable to sign in with google.' })\n        }\n    }\n\n    render() {\n        if (this.state.redirect === true) {\n            return <Redirect to='/' />\n        }\n        return (\n\n            <div className=\"container\">\n                <br />  <p className=\"text-center\" style={{\n                    position:'absolute',\n                    left:'50%',\n                    top:'10%',\n                    transform:'translateX(-50%)'\n                }}><Toaster ref={element => this.toaster = element} /></p>\n                <hr />\n                <div className=\"card bg-light\">\n                    <article className=\"card-body mx-auto\" style={{ maxWidth: '400px' }}>\n                        <h4 className=\"card-title mt-3 text-center\"><Toaster ref={element => this.toaster = element} /></h4>\n                        <p style={{ margin: \"10px 0 10px\" }}>\n                            <a href=\"#\" style={{ backgroundColor: '#DD4B39' }} onClick={() => this.googleLogin()} className=\"btn btn-block text-white\"> <i className=\"fa fa-google\" /> &nbsp; Login via Google</a>\n                        </p>\n                        <p className=\"divider-text\">\n                            <span className=\"bg-light\">OR</span>\n                        </p>\n                        <form action=\"#\" onSubmit={event => this.handleLogin(event)}>\n                            <div className=\"form-group input-group\">\n                                <div className=\"input-group-prepend\">\n                                    <span className=\"input-group-text\"> <i className=\"fa fa-envelope\" /> </span>\n                                </div>\n                                <input name='email' defaultValue=\"laquyettam1@gmail.com\" className=\"form-control\" placeholder=\"Email address\" type=\"email\" />\n                            </div> {/* form-group// */}\n\n\n                            <div className=\"form-group input-group\">\n                                <div className=\"input-group-prepend\">\n                                    <span className=\"input-group-text\"> <i className=\"fa fa-lock\" /> </span>\n                                </div>\n                                <input name='password' className=\"form-control\" placeholder=\"Create password\" type=\"password\" />\n                            </div> {/* form-group// */}\n\n                            <div className=\"form-group\">\n                                <button type=\"submit\" className=\"btn btn-primary btn-block\"> Login</button>\n                            </div> {/* form-group// */}\n                            <p className=\"text-center\">Don't have an account?<Link to=\"/sign-up\">Sign Up</Link> </p>\n                        </form>\n                    </article>\n                </div>\n            </div>\n        )\n    }\n\n\n}\n\nconst SignInForm = compose(\n    withRouter,\n    withFirebase\n)(LoginFormBase);\nexport default Login;"]},"metadata":{},"sourceType":"module"}